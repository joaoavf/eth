[{"/home/joao/Documents/eth/lottery-react/src/index.js":"1","/home/joao/Documents/eth/lottery-react/src/App.js":"2","/home/joao/Documents/eth/lottery-react/src/reportWebVitals.js":"3","/home/joao/Documents/eth/lottery-react/src/web3.js":"4","/home/joao/Documents/eth/lottery-react/src/lottery.js":"5"},{"size":500,"mtime":1607956727165,"results":"6","hashOfConfig":"7"},{"size":2235,"mtime":1607973309982,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607956727165,"results":"9","hashOfConfig":"7"},{"size":113,"mtime":1607972574334,"results":"10","hashOfConfig":"7"},{"size":1071,"mtime":1607957897112,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16n2w4p",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joao/Documents/eth/lottery-react/src/index.js",[],"/home/joao/Documents/eth/lottery-react/src/App.js",["24"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends Component {\n  state = { manager: '', \n            players: [], \n            balance: '',\n            value: '',\n            message: ''}\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance});\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({message: 'Waiting on transaction success...'})\n\n    await lottery.methods.enter().send({  from: accounts[0], \n                                          value: web3.utils.toWei(this.state.value, 'ether') \n                                        })\n\n    this.setState({message: 'You have been entered!'})\n\n  }\n\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({message: 'Waiting on transaction success...'})\n\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    })\n\n    this.setState({message: 'A winner has been picked!'})\n\n  }\n\n  render() {\n    return (\n\n      <div>\n        <h2>Lottery Contract</h2>\n        <p>This contract is managed by {this.state.manager}</p>\n        <p>There are currently {this.state.players.length} people entering.</p>\n        <p>Competing to win {web3.utils.fromWei(this.state.balance, 'ether')} ether!</p>\n\n        <hr />\n\n        <form onSubmit={this.onSubmit}>\n          <h4>Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter:</label>\n            <input \n              value={this.state.value}\n              onChange={event => this.setState({value: event.target.value})} \n            />\n          </div>\n          <button>Enter</button>\n        </form>\n\n        <hr />\n\n        <h4>Ready to pick a winner?</h4>\n        <button onClick={this.onClick}>Pick a winner!</button>\n\n        <hr />\n\n        <h1>{this.state.message}</h1>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/joao/Documents/eth/lottery-react/src/reportWebVitals.js",[],"/home/joao/Documents/eth/lottery-react/src/web3.js",[],["25","26"],"/home/joao/Documents/eth/lottery-react/src/lottery.js",[],{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]